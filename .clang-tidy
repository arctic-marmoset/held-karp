Checks: >
  *,
  -altera-id-dependent-backward-branch,
  -altera-unroll-loops,
  -cppcoreguidelines-avoid-c-arrays,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -fuchsia-default-arguments-calls,
  -fuchsia-default-arguments-declarations,
  -fuchsia-overloaded-operator,
  -hicpp-avoid-c-arrays,
  -hicpp-braces-around-statements,
  -hicpp-no-array-decay,
  -llvm*,
  -modernize-avoid-c-arrays,
  -modernize-use-trailing-return-type,
  -readability-identifier-length,
  -readability-redundant-access-specifiers,
CheckOptions:
  - { key: readability-braces-around-statements.ShortStatementLines, value: 1                           }
  - { key: readability-magic-numbers.IgnoredFloatingPointValues,     value: "0.0;1.0;2.0;3.0;4.0;100.0" }
  - { key: readability-identifier-naming.ClassCase,                  value: lower_case                  }
  - { key: readability-identifier-naming.FunctionCase,               value: lower_case                  }
  - { key: readability-identifier-naming.GlobalConstantCase,         value: lower_case                  }
  - { key: readability-identifier-naming.MacroDefinitionCase,        value: UPPER_CASE                  }
  - { key: readability-identifier-naming.NamespaceCase,              value: lower_case                  }
  - { key: readability-identifier-naming.PrivateMemberPrefix,        value: _                           }
  - { key: readability-identifier-naming.StructCase,                 value: lower_case                  }
  - { key: readability-identifier-naming.TemplateParameterCase,      value: CamelCase                   }
  - { key: readability-identifier-naming.UnionCase,                  value: lower_case                  }
  - { key: readability-identifier-naming.VariableCase,               value: lower_case                  }
